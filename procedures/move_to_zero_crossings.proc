# Move TextGrid time marks to nearest zero-crossings (procedure)
#
# This script is part of the tgutils CPrAN plugin for Praat.
# The latest version is available through CPrAN or at
# <http://cpran.net/plugins/tgutils>
#
# The tgutils plugin is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation, either
# version 3 of the License, or (at your option) any later version.
#
# The tgutils plugin is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with tgutils. If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2014-2016 Jose Joaquin Atria

#! ~~~ params
#! out:
#!  .tier: The index of the tier to convert
#!  .out$: >
#!    A variable specifying where to send the output of the conversion. If it
#!    is the empty string, output will be printed to the Info window.
#!    Otherwise, the string is interpreted as a filename, and output is
#!    printed there directly.
#! selection:
#!   in:
#!     textgrid: 1
#! ~~~
#!
#! Converts a specific TextGrid tier to Audacity labels. Audacity labels are
#! represented within Audacity as a single track, which fulfills a similar
#! role to the tiers in a TextGrid. This is why only a single tier can be
#! converted at any one time.
#!
#! To convert an entire TextGrid with multiple tiers, the procedure needs
#! to be run independently for each.
#!
procedure moveToZeroCrossings (.tier, .max_shift)
  .sound = selected("Sound")
  .textgrid = selected("TextGrid")

  selectObject: .textgrid
  .interval_tier = Is interval tier: .tier

  if .interval_tier
    .item$        = "interval"
    .time_query$  = "Get end point..."
    .delete_item$ = "Remove right boundary..."
  else
    .item$        = "point"
    .time_query$  = "Get time of point..."
    .delete_item$ = "Remove point..."
  endif

  .items = do("Get number of " + .item$ + "s...", .tier)
  .last_item = if .interval_tier then .items-1 else .items fi

  selectObject: .sound, .textgrid
  @tgutils._checkShifts(.max_shift, .last_item)

  selectObject: .sound, .textgrid
  @tgutils._moveToZero(.last_item)
  .max = tgutils._moveToZero.max

  selectObject: .sound, .textgrid
endproc

#! ~~~ params
#! out:
#!  .max: >
#!    If non-zero, the maximum time shift to apply per mark. Otherwise it
#!    is ignored.
#!  .last: >
#!    The index of the last item to check
#! selection:
#!   in:
#!     sound: 1
#!     textgrid: 1
#! internal: true
#! ~~~
#!
procedure tgutils._checkShifts: .max, .last
  .sound = selected("Sound")
  .textgrid = selected("TextGrid")

  .tier = moveToZeroCrossings.tier
  .time_query$ = moveToZeroCrossings.time_query$

  if .max
    for .item to .last

      selectObject: .textgrid
      .time = do(.time_query$, .tier, .item)

      selectObject: .sound
      .zero = Get nearest zero crossing: 1, .time

      if .time != .zero and abs(.time - .zero) > .max
        exitScript: "Some time shifts larger than max (", .max, ").",
          ... "No changes made"
      endif
    endfor
  endif

  selectObject: .sound, .textgrid
endproc

#! ~~~ params
#! in:
#!  .last: >
#!    The index of the last item to check
#! selection:
#!   in:
#!     sound: 1
#! internal: true
#! ~~~
#!
procedure tgutils._moveToZero: .last
  .moved_items = 0

  .sound = selected("Sound")
  .textgrid = selected("TextGrid")

  .interval_tier = moveToZeroCrossings.interval_tier
  .tier          = moveToZeroCrossings.tier
  .item$         = moveToZeroCrossings.item$
  .time_query$   = moveToZeroCrossings.time_query$
  .delete_item$  = moveToZeroCrossings.delete_item$

  .max = 0
  for .item to .last
    selectObject: .textgrid
    .time = do(.time_query$, .tier, .item)

    selectObject: .sound
    .zero = Get nearest zero crossing: 1, .time

    if .time != .zero
      .moved_items += 1
      .shift = abs(.time - .zero)
      .max = if .shift > .max then .shift else .max fi

      selectObject: .textgrid
      if .interval_tier
        @tgutils._moveBoundary: .tier, .item, .zero
      else
        @tgutils._movePoint: .tier, .item, .zero
      endif
      .last_item = do("Get number of " + .item$ + "s...", .tier)

    endif
  endfor
endproc

#! ~~~ params
#! in:
#!  .tier: >
#!    The index of the tier to modify
#!  .item: >
#!    The index of the interval to modify
#!  .zero: >
#!    The time of the zero crossing to move the interval boundary to
#! selection:
#!   in:
#!     textgrid: 1
#! internal: true
#! ~~~
#!
procedure tgutils._moveBoundary: .tier, .item, .zero
  .label$[1] = Get label of interval: .tier, .item
  .label$[2] = Get label of interval: .tier, .item+1

  Remove right boundary: .tier, .item
  nocheck Insert boundary: .tier, .zero

  Set interval text: .tier, .item,   .label$[1]
  Set interval text: .tier, .item+1, .label$[2]
endproc

#! ~~~ params
#! in:
#!  .tier: >
#!    The index of the tier to modify
#!  .item: >
#!    The index of the point to move
#!  .zero: >
#!    The time of the zero crossing to move the point to
#! selection:
#!   in:
#!     textgrid: 1
#! internal: true
#! ~~~
#!
procedure tgutils._movePoint: .tier, .item, .zero
  .label$ = Get label of point: .tier, .item

  Remove point: .tier, .item
  nocheck Insert point: .tier, .zero, .label$
endproc
