# This script is part of the tgutils CPrAN plugin for Praat.
# The latest version is available through CPrAN or at
# <http://cpran.net/plugins/tgutils>
#
# The tgutils plugin is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation, either
# version 3 of the License, or (at your option) any later version.
#
# The tgutils plugin is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with tgutils. If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2013, 2015-2016 Jose Joaquin Atria

#! ~~~ params
#! out:
#!  .tier: The index of the tier to convert
#!  .out$: >
#!    A variable specifying where to send the output of the conversion. If it
#!    is the empty string, output will be printed to the Info window.
#!    Otherwise, the string is interpreted as a filename, and output is
#!    printed there directly.
#! selection:
#!   in:
#!     textgrid: 1
#! ~~~
#!
#! Converts a specific TextGrid tier to Audacity labels. Audacity labels are
#! represented within Audacity as a single track, which fulfills a similar
#! role to the tiers in a TextGrid. This is why only a single tier can be
#! converted at any one time.
#!
#! To convert an entire TextGrid with multiple tiers, the procedure needs
#! to be run independently for each.
#!
procedure tierToAudacityLabel: .tier, .out$
  .name$ = selected$("TextGrid")
  .total_intervals = Get number of intervals: .tier

  if .out$ != ""
    deleteFile(.out$)
  endif

  for .interval to .total_intervals-1
    .start  = Get start point:       .tier, .interval
    .end    = Get end point:         .tier, .interval
    .label$ = Get label of interval: .tier, .interval

    if .out$ != ""
      appendFileLine: .out$, .start, tab$, .end, tab$, .label$
    else
      appendInfoLine:        .start, tab$, .end, tab$, .label$
    endif

  endfor
endproc
